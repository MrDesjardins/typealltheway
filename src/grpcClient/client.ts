import grpc from 'grpc';
import { ProfileServiceClient } from '../../autogenerated/src/grpcServer/protobuf/profile_grpc_pb';
import { ListProfilesRequest, ProfilesRequest, ProfilesResponse, ProfileResponse, ProfileRequest } from '../../autogenerated/src/grpcServer/protobuf/profile_pb';

const client = new ProfileServiceClient('0.0.0.0:50051', grpc.credentials.createInsecure());

export function getListProfiles(): Promise<ProfilesRequest> {
  return new Promise<ProfilesRequest>((resolve, reject) => {
    client.listProfiles(new ListProfilesRequest(), (err: grpc.ServiceError | null, data: ProfilesRequest) => {
      if (err) {
        reject(err);
      } else {
        resolve(data);
      }
    });
  });
}

export function getProfiles(ids: number[]): Promise<ProfilesResponse> {
  return new Promise<ProfilesResponse>((resolve, reject) => {
    const request = new ProfilesRequest();
    request.setIdsList(ids);
    client.getProfiles(request, (err: grpc.ServiceError | null, data: ProfilesResponse) => {
      if (err) {
        reject(err);
      } else {
        resolve(data);
      }
    });
  });
}

export function getProfile(id: number): Promise<ProfileResponse> {
  return new Promise<ProfileResponse>((resolve, reject) => {
    const request = new ProfileRequest();
    request.setId(id);
    client.getProfile(request, (err: any, data: any) => {
      if (err) {
        reject(err);
      } else {
        resolve(data);
      }
    });
  });
}